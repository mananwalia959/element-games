
name: Pipeline

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # build UI
      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install dependencies and Build Angular App 
        working-directory: ./client
        run: |
          npm ci
          npm run build-java
       # build Backend    
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Make gradlew executable
        run: chmod +x ./gradlew
      - name: Build with Gradle
        run: ./gradlew clean build
      - uses: actions/cache@v2
        name: Cache build folder to use later
        with:
          path: ./build/**
          key: ${{ github.sha }}

  publishDockerArtifact:
    runs-on: ubuntu-latest
    needs: [build] # Only run this workflow when "build" workflow succeeds
    if: ${{ github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch' ) }} 
    steps : 
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Use Cached build folder from previous build job
        with:
          path: ./build/**
          key: ${{ github.sha }}
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
         # path where dockerfile will be running
          context: .
          push: true
          tags: mananwalia959/element-games:${{ github.sha }},mananwalia959/element-games:latest 

  deploy:
    runs-on: ubuntu-latest
    needs: [publishDockerArtifact] # Only run this workflow when "publishDockerArtifact" workflow succeeds
    environment: 'production'
    steps:
    - name: Deploy Publish Artifact
      uses: appleboy/ssh-action@1a8b3784eaa665f677fa114edd5683bb6a6bfaa8
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_PRIVATE_SSH_KEY }}
        script_stop: true
        script: | 
          docker container rm -f element-games || true
          docker image prune -a -f
          docker run -d --name element-games  --restart always  --add-host=host.docker.internal:host-gateway \ 
            -p 8085:8080   \ 
            -e JWT_SECRET=${{ secrets.JWT_SECRET }}  \ 
            mananwalia959/element-games:${{ github.sha }}     
        

